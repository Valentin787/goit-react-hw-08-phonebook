{"version":3,"sources":["../node_modules/nanoid/index.browser.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/collapseToast.ts","../../src/utils/cssTransition.tsx","../../src/utils/mapper.ts","../../src/core/eventManager.ts","../../src/components/Icons.tsx","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.ts","../node_modules/@mui/icons-material/CancelRounded.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useLockBodyScroll.js"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","style","requestAnimationFrame","scrollHeight","setTimeout","cssTransition","appendPosition","collapse","collapseDuration","isIn","enterClassName","enter","exitClassName","exit","animationStep","useRef","useLayoutEffect","nodeRef","classToToken","onEntered","e","Event","onEnter","useEffect","onExited","preventExitTransition","React","toToastItem","toast","status","containerId","theme","type","data","isLoading","icon","eventManager","list","emitQueue","on","this","has","event","set","get","off","callback","cb","delete","cancelEmit","timers","emit","timer","Svg","rest","viewBox","width","height","fill","Icons","info","props","d","warning","success","error","spinner","className","getIcon","Icon","iconProps","cloneElement","maybeIcon","useToastContainer","useReducer","x","useState","containerRef","toastToRender","isToastActive","toastIds","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","removeToast","setToastIds","state","dequeueToast","appendToast","staleId","buildToast","options","isNotValid","closeToast","isNotAnUpdate","updateId","toastAutoClose","containerAutoClose","toastProps","key","closeButton","rtl","position","transition","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","forceUpdate","toastContent","getToastToRender","toRender","collection","Array","p","getX","getY","useToast","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragTransitionEnd","right","pauseToast","playToast","setIsRunning","onDragMove","isRunning","Math","onDragEnd","setPreventExitTransition","once","window","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","CloseButton","ariaLabel","fillRule","ProgressBar","animationDuration","delay","animationPlayState","opacity","hide","controlledProgress","defaultClassName","cx","classNames","animationEvent","Toast","cssClasses","isProgressControlled","closeButtonProps","Close","ref","iconOut","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","containerStyle","toastList","pointerEvents","length","newestOnTop","containers","generateToastId","getToastId","dispatchToast","mergeOptions","createToastByType","pending","resetParams","resolver","input","baseParams","result","params","render","promise","err","t","container","oldContent","nextOptions","containerInstance","latestInstance","item","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","module","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","__esModule","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","isBrowser","getClosestBody","el","tagName","document_1","contentDocument","body","offsetParent","preventDefault","rawEvent","touches","isIosDevice","navigator","platform","test","bodies","Map","doc","undefined","documentListenerAdded","locked","elementRef","bodyRef","unlock","bodyInfo","counter","ontouchmove","obj","args","_i","removeEventListener","overflow","initialOverflow","current","addEventListener","passive","lock","_locked","_elementRef"],"mappings":"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","file":"static/js/0.9ddc86d7.chunk.js","sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId != null;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n      return () => {\n        toastToRender.clear();\n        eventManager.emit(Event.WillUnmount, instance);\n      };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, isToastIdValid } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => isToastIdValid(id) && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm4.3 14.3c-.39.39-1.02.39-1.41 0L12 13.41 9.11 16.3c-.39.39-1.02.39-1.41 0a.9959.9959 0 0 1 0-1.41L10.59 12 7.7 9.11a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L12 10.59l2.89-2.89c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 12l2.89 2.89c.38.38.38 1.02 0 1.41z\"\n}), 'CancelRounded');\n\nexports.default = _default;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useRef } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nexport function getClosestBody(el) {\n    if (!el) {\n        return null;\n    }\n    else if (el.tagName === 'BODY') {\n        return el;\n    }\n    else if (el.tagName === 'IFRAME') {\n        var document_1 = el.contentDocument;\n        return document_1 ? document_1.body : null;\n    }\n    else if (!el.offsetParent) {\n        return null;\n    }\n    return getClosestBody(el.offsetParent);\n}\nfunction preventDefault(rawEvent) {\n    var e = rawEvent || window.event;\n    // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n    if (e.touches.length > 1)\n        return true;\n    if (e.preventDefault)\n        e.preventDefault();\n    return false;\n}\nvar isIosDevice = isBrowser &&\n    window.navigator &&\n    window.navigator.platform &&\n    /iP(ad|hone|od)/.test(window.navigator.platform);\nvar bodies = new Map();\nvar doc = typeof document === 'object' ? document : undefined;\nvar documentListenerAdded = false;\nexport default !doc\n    ? function useLockBodyMock(_locked, _elementRef) {\n        if (_locked === void 0) { _locked = true; }\n    }\n    : function useLockBody(locked, elementRef) {\n        if (locked === void 0) { locked = true; }\n        var bodyRef = useRef(doc.body);\n        elementRef = elementRef || bodyRef;\n        var lock = function (body) {\n            var bodyInfo = bodies.get(body);\n            if (!bodyInfo) {\n                bodies.set(body, { counter: 1, initialOverflow: body.style.overflow });\n                if (isIosDevice) {\n                    if (!documentListenerAdded) {\n                        on(document, 'touchmove', preventDefault, { passive: false });\n                        documentListenerAdded = true;\n                    }\n                }\n                else {\n                    body.style.overflow = 'hidden';\n                }\n            }\n            else {\n                bodies.set(body, {\n                    counter: bodyInfo.counter + 1,\n                    initialOverflow: bodyInfo.initialOverflow,\n                });\n            }\n        };\n        var unlock = function (body) {\n            var bodyInfo = bodies.get(body);\n            if (bodyInfo) {\n                if (bodyInfo.counter === 1) {\n                    bodies.delete(body);\n                    if (isIosDevice) {\n                        body.ontouchmove = null;\n                        if (documentListenerAdded) {\n                            off(document, 'touchmove', preventDefault);\n                            documentListenerAdded = false;\n                        }\n                    }\n                    else {\n                        body.style.overflow = bodyInfo.initialOverflow;\n                    }\n                }\n                else {\n                    bodies.set(body, {\n                        counter: bodyInfo.counter - 1,\n                        initialOverflow: bodyInfo.initialOverflow,\n                    });\n                }\n            }\n        };\n        useEffect(function () {\n            var body = getClosestBody(elementRef.current);\n            if (!body) {\n                return;\n            }\n            if (locked) {\n                lock(body);\n            }\n            else {\n                unlock(body);\n            }\n        }, [locked, elementRef.current]);\n        // clean up, on un-mount\n        useEffect(function () {\n            var body = getClosestBody(elementRef.current);\n            if (!body) {\n                return;\n            }\n            return function () {\n                unlock(body);\n            };\n        }, []);\n    };\n"],"sourceRoot":""}