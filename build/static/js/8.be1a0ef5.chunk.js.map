{"version":3,"sources":["components/SingInForm/SingInForm.module.css","components/SingInForm/SingInForm.jsx","pages/auth/SingInPage.jsx"],"names":["module","exports","SingInForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","isBtnDisabled","name","className","s","loginForm","initialValues","remember","labelCol","span","wrapperCol","onFinish","values","authOperations","logIn","Item","label","onChange","e","target","value","rules","type","message","required","containerInput","placeholder","prefix","SettingFilled","Password","LockOutlined","siteFormItemIcon","htmlType","button","disabled","textContainer","link","href","SingInPage","style","padding"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,cAAgB,kCAAkC,KAAO,yB,4JCyG1IC,EAhGI,WAEjB,IAAMC,EAAWC,cAEjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAiBJ,IAAUE,EASjC,OAEE,eAAC,IAAD,CACEG,KAAK,eACLC,UAAWC,IAAEC,UACbC,cAAe,CACbC,UAAU,GAEZC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,SArBa,SAACC,GAChBlB,EAASmB,IAAeC,MAAM,CAAEjB,QAAOE,aAIxC,EAIC,UAeE,cAAC,IAAKgB,KAAN,CACEb,KAAK,QACLc,MAAM,SACNC,SAAU,SAAAC,GAAC,OAAGpB,EAASoB,EAAEC,OAAOC,MAArB,EAEXC,MAAO,CACL,CACEC,KAAM,QACNC,QAAS,kCAEX,CACEC,UAAU,EACVD,QAAS,8BAZf,SAgBE,cAAC,IAAD,CACApB,UAAWC,IAAEqB,eACbC,YAAY,0CACZC,OAAQ,cAACC,EAAA,EAAD,QAGV,cAAC,IAAKb,KAAN,CACCC,MAAM,WACLd,KAAK,WACLe,SAAU,SAAAC,GAAC,OAAGlB,EAAYkB,EAAEC,OAAOC,MAAxB,EACXC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,gCAPf,SAWE,cAAC,IAAMM,SAAP,CACE1B,UAAWC,IAAEqB,eACbE,OAAQ,cAACG,EAAA,EAAD,CAAc3B,UAAWC,IAAE2B,mBACnCT,KAAK,WACLI,YAAY,uCAKhB,eAAC,IAAKX,KAAN,WAEE,cAAC,IAAD,CACEO,KAAK,UACLU,SAAS,SACT7B,UAAWC,IAAE6B,OACbC,SAAUjC,EAJZ,oBAQI,sBAAKE,UAAWC,IAAE+B,cAAlB,UACE,oCACC,mBACHhC,UAAWC,IAAEgC,KACbC,KAAK,YAFF,mCAOd,EC1FcC,UAXI,WAEjB,OACE,8BACE,qBAAKC,MAAO,CAAEC,QAAS,IAAvB,SACC,cAAC,EAAD,OAIN,C","file":"static/js/8.be1a0ef5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"SingInForm_loginForm__3VQtF\",\"button\":\"SingInForm_button__3KhYt\",\"textContainer\":\"SingInForm_textContainer__14e3r\",\"link\":\"SingInForm_link__3ARMS\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { authOperations } from 'redux/auth';\nimport 'antd/dist/antd.css';\nimport { LockOutlined,SettingFilled } from '@ant-design/icons';\nimport { Button, Form, Input } from 'antd';\nimport s from './SingInForm.module.css'\n\n\n\nconst SingInForm = () => {\n\n  const dispatch = useDispatch()\n \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const isBtnDisabled = !email || !password;\n\n  const onFinish = (values) => {\n    dispatch(authOperations.logIn({ email, password }));\n\n    // setEmail('');\n    // setPassword('');\n  };\n\n  return (\n    \n    <Form\n      name=\"normal_login\"\n      className={s.loginForm}\n      initialValues={{\n        remember: true,\n      }}\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      onFinish={onFinish}\n    >\n      \n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        onChange={e =>setEmail(e.target.value)}\n        \n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input\n        className={s.containerInput}       \n        placeholder=\" Please enter your e-mail with -> @  :)\"\n        prefix={<SettingFilled />}/> \n        </Form.Item>\n\n      <Form.Item\n       label=\"Password\"\n        name=\"password\"\n        onChange={e =>setPassword(e.target.value)}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input.Password\n          className={s.containerInput}\n          prefix={<LockOutlined className={s.siteFormItemIcon} />}\n          type=\"password\"\n          placeholder=\" Please enter your password  ...\"\n        />\n      </Form.Item>\n\n\n      <Form.Item>\n\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className={s.button}\n          disabled={isBtnDisabled}\n          >\n          Log in\n            </Button>\n            <div className={s.textContainer}>\n              <p>Or </p>\n               <a\n            className={s.link}\n            href=\"/register\">Register Now!</a>\n            </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SingInForm;","import SingInForm from 'components/SingInForm';\n\n\nconst SingInPage = () => {\n\n  return (\n    <div>\n      <div style={{ padding: 20 }}>\n       <SingInForm/>\n      </div>\n    </div>\n  )\n}\n\nexport default SingInPage;"],"sourceRoot":""}