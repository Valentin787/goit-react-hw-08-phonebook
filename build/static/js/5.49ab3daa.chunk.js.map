{"version":3,"sources":["components/common/Input/Input.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","components/ContactList/ContactList.module.css","components/common/Modal/Modal.module.css","components/common/EditCard/EditCard.module.css","components/Contacts/Contacts.module.css","components/common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/common/Modal/Modal.jsx","components/common/EditCard/EditCard.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"names":["module","exports","Input","label","arg","id","useRef","nanoid","current","theme","useContext","ThemeContext","className","s","wrapperInput","themes","light","labelTitleLight","labelTitleDark","htmlFor","input","ContactForm","confirmContact","t","useTranslation","useState","name","setName","number","setNumber","normalizeName","split","map","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","resetForm","Appear","time","headerLight","headerDark","onSubmit","e","preventDefault","objData","formLight","formDark","type","onChange","target","value","pattern","title","required","btnAdd","headerListLight","headerListDark","ItemContact","onDeleteContact","onEditContact","item","textContainer","text","btnDel","onClick","ContactList","openEditModal","filterContacts","list","Filter","filterChangeInput","event","modalRoot","document","querySelector","Modal","closeModal","children","useLockBodyScroll","useEffect","handlerKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","backdrop","modal","btnClose","EditCard","activeContact","inputRef","focus","resetInputs","disabledBtn","container","ref","disabled","btn","ACTION","Contacts","userToken","useSelector","authSelectors","getToken","loading","loadingSelector","contactsBook","contactsState","filterValueName","filterPhoneBook","dispatch","useDispatch","newContact","setNewContact","setActiveContact","deleteContactId","setDeleteContactId","openModal","setOpenModal","action","setAction","setEditModal","closeEditModal","getContacts","isHaveName","some","toast","error","icon","addContact","success","editContact","filterContactsName","useMemo","normalizedFilter","toLowerCase","finalArray","filter","contact","includes","length","info","warning","console","log","deleteContact","Loader","activeItem","editedItem","ContactsPage"],"mappings":"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","file":"static/js/5.49ab3daa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__1IQKf\",\"labelTitle\":\"Input_labelTitle__1kSvN\",\"labelTitleLight\":\"Input_labelTitleLight__1d65f Input_labelTitle__1kSvN\",\"labelTitleDark\":\"Input_labelTitleDark__7YeeD Input_labelTitle__1kSvN\",\"input\":\"Input_input__2lBHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontFamilyText\":\"ContactForm_fontFamilyText__RhnUe\",\"form\":\"ContactForm_form__1fuOn\",\"formLight\":\"ContactForm_formLight__lqlMy ContactForm_form__1fuOn\",\"formDark\":\"ContactForm_formDark__2pfTh ContactForm_form__1fuOn\",\"headerLight\":\"ContactForm_headerLight__ec622 ContactForm_fontFamilyText__RhnUe\",\"headerDark\":\"ContactForm_headerDark__1NoEG ContactForm_fontFamilyText__RhnUe\",\"headerListLight\":\"ContactForm_headerListLight__2JYCF ContactForm_fontFamilyText__RhnUe\",\"headerListDark\":\"ContactForm_headerListDark__dS1aV ContactForm_fontFamilyText__RhnUe\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN ContactForm_fontFamilyText__RhnUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__13Q_8\",\"text\":\"ItemContact_text__17uh3\",\"textContainer\":\"ItemContact_textContainer__1XZg2\",\"btnDel\":\"ItemContact_btnDel__2IseJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3v0tS\",\"appear\":\"Modal_appear__1mmsb\",\"modal\":\"Modal_modal__3q2YW\",\"animatetop\":\"Modal_animatetop__2L83F\",\"slide-in\":\"Modal_slide-in__1o3r5\",\"btnClose\":\"Modal_btnClose__3_HdB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"EditCard_common__1FLeA\",\"container\":\"EditCard_container__3i2V7 EditCard_common__1FLeA\",\"label\":\"EditCard_label__2QmLq EditCard_common__1FLeA\",\"input\":\"EditCard_input__1nRs3\",\"btn\":\"EditCard_btn__200iQ\",\"disabled\":\"EditCard_disabled__1ai0G EditCard_btn__200iQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__2L0E8\"};","import { useContext, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport s from './Input.module.css';\nimport { ThemeContext, themes } from 'components/context/themeContext';\n\nconst Input = ({ label, ...arg }) => {\n  const { current: id } = useRef(nanoid());\n  const { theme } = useContext(ThemeContext);\n\n\n  return (\n    <div className={s.wrapperInput}>\n      <label\n        className={theme === themes.light ? s.labelTitleLight : s.labelTitleDark}\n        // \n        htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../common/Input';\nimport Appear from 'components/Appear';\nimport { ThemeContext, themes } from 'components/context/themeContext';\nimport { useTranslation } from 'react-i18next';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({confirmContact}) => {\n\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n    \n\n\n  return (\n    <Appear time={300}>\n      <h1\n        className={theme === themes.light ? s.headerLight : s.headerDark}\n    \n      >{t(\"contactForm.headerForm\")}</h1>\n      <form\n        onSubmit={onSubFormData}\n        className={theme === themes.light ? s.formLight : s.formDark}>\n      <Input\n        label={t(\"contactForm.name\")}\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label={t(\"contactForm.number\")}\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        {t(\"contactForm.button\")}\n      </button>\n      </form>\n      <h2\n        className={theme === themes.light ? s.headerListLight : s.headerListDark}\n      >{t(\"contactForm.headerList\")}</h2>\n    </Appear>\n\n  );\n};\n\nContactForm.propTypes = {\n  confirmContact: PropTypes.func,\n};\n\nexport default ContactForm;\n\n","import PropTypes from 'prop-types';\nimport BorderColorSharpIcon from '@mui/icons-material/BorderColorSharp';\nimport ContactPhoneOutlinedIcon from '@mui/icons-material/ContactPhoneOutlined';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport s from './ItemContact.module.css';\n\nconst ItemContact = ({\n  onDeleteContact,\n  onEditContact,\n  name,\n  number,\n  id}) => {\n\n  return (\n    <>\n      <li className={s.item} id={id}>\n\n        <div className={s.textContainer}>\n          <ContactPhoneOutlinedIcon/>\n          <strong\n            className={s.text}>\n            {name}: {number}\n          </strong>\n        </div>\n\n        <div>\n        <button\n        className={s.btnDel}\n        onClick={onEditContact}\n        type=\"button\"\n        >\n          <BorderColorSharpIcon/>\n        </button>\n      <button\n        className={s.btnDel}\n        onClick={onDeleteContact}\n        type=\"button\"\n      >\n        <DeleteForeverOutlinedIcon/>\n      </button>\n      </div>\n      </li>\n      <hr/>\n      </>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onDeleteContact: PropTypes.func,\n  onEditContact:PropTypes.func,\n  id:PropTypes.string,\n};\n\nexport default ItemContact;\n\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\nimport Appear from 'components/Appear';\n\nconst ContactList = ({\n  onDeleteContact,\n  onEditContact,\n  openEditModal,\n  filterContacts }) => {\n\n  return (\n    <Appear time={400}>\n    <ul className={s.list}>\n      {filterContacts && filterContacts.map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => onDeleteContact(id)}\n            onEditContact={() => onEditContact({id,name, number})}\n            openEditModal={openEditModal}\n          />\n        );\n      })}\n      </ul>\n      </Appear>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  filterContactsName: PropTypes.array,\n};\n\nexport default ContactList;\n","import Appear from 'components/Appear';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Input from '../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n  const { t } = useTranslation();\n\n  return (\n    <Appear time={350}>\n    <Input\n      label={t(\"filter.labelName\")}\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      name=\"filter\"\n      value={value}\n      />\n      </Appear>\n  );\n}\n\nFilter.propTypes = {\n  filterChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n","import { useEffect } from \"react\";\nimport { useLockBodyScroll } from \"react-use\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\n\nimport s from \"./Modal.module.css\";\n\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ closeModal, children }) => {\n  useLockBodyScroll(true);\n\n  useEffect(() => {\n    const handlerKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handlerKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handlerKeyDown);\n    };\n  }, [closeModal]);\n\n  const handlerBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n    const handlerBtnCloseClick = () => {\n    closeModal();\n  };\n  return createPortal(\n    <div onClick={handlerBackdropClick} className={s.backdrop}>\n      <div className={s.modal}>\n        <button onClick={handlerBtnCloseClick}\n          className={s.btnClose}\n        >\n          <CancelRoundedIcon/>\n        </button>\n        {children}       \n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default Modal;","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./EditCard.module.css\";\n\nconst EditCard = ({ onSubmit, activeContact }) => {\n  const [id, setId] = useState(activeContact.id)\n  const [name, setName] = useState(activeContact.name);\n  const [number, setNumber] = useState(activeContact.number)\n\n  // USE REF\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  // SUBMIT FORM\n\n  const handlerSubmitNumber = (e) => {\n    e.preventDefault();\n    \n    onSubmit({id,name,number});\n  \n    resetInputs();\n  };\n\n  // RESET INPUT\n\n  const resetInputs = () => {\n    setName(\"\");\n    setNumber(\"\")\n  };\n\n  const disabledBtn = !name || !number;\n\n  return (\n    <form\n      onSubmit={handlerSubmitNumber}\n      className={s.container}\n    >\n      <label className={s.label}>\n        <input\n          ref={inputRef}\n          className={s.input}\n          onChange={e =>setName(e.target.value)}\n          value={name }\n          type=\"text\"\n        />\n      </label>\n        <label className={s.label}>\n        <input\n          ref={inputRef}\n          className={s.input}\n          onChange={e =>setNumber(e.target.value) }\n          value={number }\n          type=\"text\"\n        />\n      </label>\n      <button\n        className={!disabledBtn? s.btn : s.disabled}\n        type=\"submit\"\n      >\n        Save\n      </button>\n    </form>\n  );\n};\n\nEditCard.propTypes = {\n  onSubmit: PropTypes.func,\n  activeContact: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default EditCard;","import { useEffect,useState,useMemo} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Loader from '../common/Loader';\nimport Modal from 'components/common/Modal';\nimport EditCard from 'components/common/EditCard';\n\nimport { getContacts, addContact, editContact, deleteContact } from 'redux/phoneBook/operation';\n\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\n\nimport { authSelectors } from 'redux/auth';\nimport { contactsState, filterPhoneBook, loadingSelector } from '../../redux/phoneBook/phonebook-selectors';\n\nimport { ToastContainer,toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from './Contacts.module.css'\n\n\nconst ACTION = {\n  NONE: \"none\",\n  EDIT: \"edit\",\n  DELETE: \"delete\",\n};\n\n\nconst Contacts = () => {\n\n  const userToken = useSelector(authSelectors.getToken);\n  const loading = useSelector(loadingSelector);\n  const contactsBook = useSelector(contactsState);\n  const filterValueName = useSelector(filterPhoneBook);\n  const dispatch = useDispatch();\n\n  \n  const [newContact, setNewContact] = useState(null);\n  const [activeContact, setActiveContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null);\n\n  const [openModal, setOpenModal] = useState(ACTION.NONE);\n  const [action, setAction] = useState(ACTION.NONE);\n\n  const [editModal, setEditModal] = useState(false);\n\n  \n \n  // OPEN MODAL\n  const openEditModal = () => setEditModal(true);\n\n  // CLOSE MODAL\n  const closeEditModal = () => {\n    setEditModal(false);\n    setOpenModal(ACTION.NONE)\n  };\n\n\n  //GET_CONTACTS\n\n  useEffect(() => {\n    if (!userToken) return;\n    \n    dispatch(getContacts(userToken))\n  }, [dispatch, userToken])\n\n    //ADD_CONTACT\n  const confirmContact = (contact) => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(({ name }) => name === newContact.name);\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, { icon: `❌` });\n      setNewContact(null);\n    }\n    if (!isHaveName || !userToken) {\n\n      dispatch(addContact(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact, userToken]);\n\n  // EDIT CONTACT\n  const onEditContact = (activeItem) => {\n    setActiveContact(activeItem);\n    setOpenModal(ACTION.EDIT)\n   \n  };\n  \n  const confirmEdit = (editedItem) => {\n    if (editedItem.name === activeContact.name && editedItem.number === activeContact.number) {\n     setOpenModal(ACTION.NONE);\n    setActiveContact(null);\n    return;\n    }\n    setAction(ACTION.EDIT);\n    setActiveContact(editedItem);\n    \n  };\n \n  useEffect(() => {\n    if (action !== ACTION.EDIT || !activeContact) return;\n    const saveEditContact = () => {\n      \n    dispatch(editContact(activeContact))\n   \n    toast.success(\n    `Контакт ${activeContact.name.toUpperCase()} успешно изменен !!`\n    );\n    setAction(ACTION.NONE);\n    setActiveContact(null);\n    setOpenModal(ACTION.NONE);\n\n    closeEditModal();\n    };\n\n    saveEditContact();\n  }, [action, activeContact, dispatch]);\n\n\n  // FILTER CITY\n\n  const filterChangeInput = (value) => dispatch(filterContacts(value))\n  \n  //Варіант з хуком USE MEMO\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n\n    const finalArray = contactsBook && contactsBook.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`)\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`)\n    }\n    return finalArray;\n  }, [contactsBook, filterValueName]);\n\n//DELETE_CONTACT \n\n  const onDeleteContact = (id) => setDeleteContactId(id);\n\n  useEffect(() => {\n    if (!deleteContactId ) return;\n    console.log(deleteContactId);\n    dispatch(deleteContact(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n        icon: `❎`\n      });\n    setDeleteContactId(null);\n\n  }, [deleteContactId, dispatch])\n  \n  \n  return (\n    <>\n      {loading && <Loader loading={loading}/>}\n      <div className={s.container}>\n      \n      {<ContactForm confirmContact={confirmContact}\n      />}\n    {contactsBook.length > 0 && (\n        <Filter\n          filterChangeInput={filterChangeInput}\n          value={filterValueName}\n      />\n  )}\n    {!contactsBook.length && !loading && <p>Please, add contact!</p>}\n{contactsBook.length ? <ContactList\n        openEditModal={openEditModal}\n        onEditContact={onEditContact}\n        filterContacts={filterContactsName}\n        onDeleteContact={onDeleteContact}\n        />:\"\"}\n{openModal ===  ACTION.EDIT && <Modal\n        closeModal={closeEditModal}>\n          <EditCard\n            activeContact={activeContact}\n            onSubmit={confirmEdit}\n          />\n        </Modal>}\n      <ToastContainer theme=\"dark\"/>\n    </div>\n    </>\n    \n  )\n}\n\nContacts.propTypes = {}\n\nexport default Contacts\n\n","import Contacts from 'components/Contacts'\n\n\nconst ContactsPage = () => {\n  return (\n    <>\n    <Contacts/>\n    </>\n  )\n}\n\nexport default ContactsPage"],"sourceRoot":""}