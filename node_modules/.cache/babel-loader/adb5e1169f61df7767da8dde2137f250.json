{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarDay/CalendarDay.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../DateCalendar.scss';\nimport { useSelector } from 'react-redux';\nimport { eventsState } from 'redux/event/eventsSelectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CalendarDay = _ref => {\n  _s();\n\n  let {\n    selected,\n    days,\n    setDay,\n    data\n  } = _ref;\n  const allEvents = useSelector(eventsState); // const hasEvents = allEvents.some(item=>item.data === data)\n\n  console.log(days);\n  let cls = selected ? \" day-active\" : \"\"; // if (hasEvents) cls += \" has-events\";\n  // if (this.props.hasMatches) cls += \" has-matches\";\n  // let day = days;\n  // return days > 0 ? (\n  //     {}\n  //     <div\n  //       className={\"day\" + cls}\n  //       onClick={(e) => setDay(days, e)}\n  //     >\n  //       {days}\n  //     </div>\n  //   ) : (\n  //     <div className=\"day day-empty\"></div>\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: days > 0 && allEvents.map(item => {\n      const checkData = item.data.slice(0, 2) === days.toString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: checkData ? \"day\" + cls + \" has-events\" : \"day\",\n        onClick: e => setDay(days, e),\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this); //   if (item.data.slice(0, 2) === days.toString() ) {\n      //   return  <div\n      //   className={checkData ? \"day\" + cls + \" has-events\": \"day\" }\n      //   onClick={(e) => setDay(days, e)}\n      // >\n      //   {days}\n      // </div>\n      //   }\n      // return <div className=\"day \">{days}</div>\n      // console.log(item.data.slice(0,2) === days.toString())\n      // console.log(item.data.slice(0,2))\n    })\n  }, void 0, false); //   return days > 0 ? (\n  //   {}\n  //   <div\n  //     className={\"day\" + cls}\n  //     onClick={(e) => setDay(days, e)}\n  //   >\n  //     {days}\n  //   </div>\n  // ) : (\n  //   <div className=\"day day-empty\"></div>\n  // );\n};\n\n_s(CalendarDay, \"TXVuRPYS+dZW2EwhkqTnZ9PgEao=\", false, function () {\n  return [useSelector];\n});\n\n_c = CalendarDay;\nCalendarDay.propTypes = {};\nexport default CalendarDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarDay\");","map":{"version":3,"names":["React","PropTypes","useSelector","eventsState","CalendarDay","selected","days","setDay","data","allEvents","console","log","cls","map","item","checkData","slice","toString","e","propTypes"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarDay/CalendarDay.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../DateCalendar.scss';\nimport { useSelector } from 'react-redux';\nimport { eventsState } from 'redux/event/eventsSelectors';\n\nconst CalendarDay = ({\n  selected,\n  days,\n  setDay,\n  data}) => {\n  \n  const allEvents = useSelector(eventsState);\n  // const hasEvents = allEvents.some(item=>item.data === data)\n  console.log(days)\n  let cls = selected ? \" day-active\" : \"\";\n  // if (hasEvents) cls += \" has-events\";\n    // if (this.props.hasMatches) cls += \" has-matches\";\n\n    // let day = days;\n  // return days > 0 ? (\n  //     {}\n  //     <div\n  //       className={\"day\" + cls}\n  //       onClick={(e) => setDay(days, e)}\n  //     >\n  //       {days}\n  //     </div>\n  //   ) : (\n  //     <div className=\"day day-empty\"></div>\n  //   );\n\n  return (\n    <>\n      {days > 0 && allEvents.map(item => {\n        const checkData = item.data.slice(0, 2) === days.toString();\n    \n        return <div className={checkData ?\n          \"day\" + cls + \" has-events\" : \"day\"}\n          onClick={(e) => setDay(days, e)}\n      >\n        {days}\n      </div>\n      //   if (item.data.slice(0, 2) === days.toString() ) {\n      //   return  <div\n      //   className={checkData ? \"day\" + cls + \" has-events\": \"day\" }\n      //   onClick={(e) => setDay(days, e)}\n      // >\n      //   {days}\n      // </div>\n      //   }\n        \n        // return <div className=\"day \">{days}</div>\n        \n        // console.log(item.data.slice(0,2) === days.toString())\n        // console.log(item.data.slice(0,2))\n      })}\n    </>\n    )\n    //   return days > 0 ? (\n    //   {}\n    //   <div\n    //     className={\"day\" + cls}\n    //     onClick={(e) => setDay(days, e)}\n    //   >\n    //     {days}\n    //   </div>\n    // ) : (\n    //   <div className=\"day day-empty\"></div>\n    // );\n  \n}\n\nCalendarDay.propTypes = {}\n\nexport default CalendarDay"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;;;AAEA,MAAMC,WAAW,GAAG,QAIR;EAAA;;EAAA,IAJS;IACnBC,QADmB;IAEnBC,IAFmB;IAGnBC,MAHmB;IAInBC;EAJmB,CAIT;EAEV,MAAMC,SAAS,GAAGP,WAAW,CAACC,WAAD,CAA7B,CAFU,CAGV;;EACAO,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACA,IAAIM,GAAG,GAAGP,QAAQ,GAAG,aAAH,GAAmB,EAArC,CALU,CAMV;EACE;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,UACGC,IAAI,GAAG,CAAP,IAAYG,SAAS,CAACI,GAAV,CAAcC,IAAI,IAAI;MACjC,MAAMC,SAAS,GAAGD,IAAI,CAACN,IAAL,CAAUQ,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,MAA0BV,IAAI,CAACW,QAAL,EAA5C;MAEA,oBAAO;QAAK,SAAS,EAAEF,SAAS,GAC9B,QAAQH,GAAR,GAAc,aADgB,GACA,KADzB;QAEL,OAAO,EAAGM,CAAD,IAAOX,MAAM,CAACD,IAAD,EAAOY,CAAP,CAFjB;QAAA,UAINZ;MAJM;QAAA;QAAA;QAAA;MAAA,QAAP,CAHiC,CASnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEE;MAEA;MACA;IACD,CAtBY;EADf,iBADF,CAtBU,CAiDR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CAjED;;GAAMF,W;UAMcF,W;;;KANdE,W;AAmENA,WAAW,CAACe,SAAZ,GAAwB,EAAxB;AAEA,eAAef,WAAf"},"metadata":{},"sourceType":"module"}