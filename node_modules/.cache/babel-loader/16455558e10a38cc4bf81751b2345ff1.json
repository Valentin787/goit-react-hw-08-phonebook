{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/SingInForm/SingInForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { authOperations } from 'redux/auth';\nimport 'antd/dist/antd.css';\nimport { LockOutlined, SettingFilled } from '@ant-design/icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button, Form, Input } from 'antd';\nimport s from './SingInForm.module.css';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingInForm = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const lang = useTranslation();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isBtnDisabled = !email || !password;\n\n  const onFinish = values => {\n    dispatch(authOperations.logIn({\n      email,\n      password\n    })); // setEmail('');\n    // setPassword('');\n  };\n\n  const checkLang = lang[1].language;\n  const messageNotValid = checkLang === \"en\" ? \"The input is not valid E-mail!\" : \"Eлектронна скринька введена в невірному форматі\";\n  console.log(messageNotValid);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    timeout: 5000,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"normal_login\",\n      className: s.loginForm,\n      initialValues: {\n        remember: true\n      },\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: t(\"singInForm.email\"),\n        onChange: e => setEmail(e.target.value),\n        rules: [{\n          type: 'email',\n          message: messageNotValid\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: s.containerInput,\n          placeholder: t(\"singInForm.placeholderEmail\"),\n          prefix: /*#__PURE__*/_jsxDEV(SettingFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: t(\"singInForm.password\"),\n        onChange: e => setPassword(e.target.value),\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          className: s.containerInput,\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n            className: s.siteFormItemIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this),\n          type: \"password\",\n          placeholder: t(\"singInForm.placeholderPassword\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: s.button,\n          disabled: isBtnDisabled,\n          children: t(\"singInForm.buttonLogIn\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.textContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [t(\"singInForm.or\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: s.link,\n            href: \"/register\",\n            children: t(\"singInForm.gooRegisterForm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingInForm, \"dTodd0QqE/WRgTicMLC2GqmkQgQ=\", false, function () {\n  return [useTranslation, useTranslation, useDispatch];\n});\n\n_c = SingInForm;\nexport default SingInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingInForm\");","map":{"version":3,"names":["useDispatch","useState","authOperations","LockOutlined","SettingFilled","CSSTransition","Button","Form","Input","s","useTranslation","SingInForm","t","lang","dispatch","email","setEmail","password","setPassword","isBtnDisabled","onFinish","values","logIn","checkLang","language","messageNotValid","console","log","loginForm","remember","span","e","target","value","type","message","required","containerInput","siteFormItemIcon","button","textContainer","link"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/SingInForm/SingInForm.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { authOperations } from 'redux/auth';\nimport 'antd/dist/antd.css';\nimport { LockOutlined, SettingFilled } from '@ant-design/icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button, Form, Input } from 'antd';\nimport s from './SingInForm.module.css'\nimport { useTranslation } from 'react-i18next';\n\n\n\nconst SingInForm = () => {\n\n  const { t } = useTranslation();\n  const lang = useTranslation();\n  \n\n  const dispatch = useDispatch()\n \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const isBtnDisabled = !email || !password;\n\n  const onFinish = (values) => {\n    dispatch(authOperations.logIn({ email, password }));\n\n    // setEmail('');\n    // setPassword('');\n  };\n\n \n  const checkLang = lang[1].language;\n  const messageNotValid = checkLang === \"en\"? \"The input is not valid E-mail!\": \"Eлектронна скринька введена в невірному форматі\";\n  console.log(messageNotValid);\n  \n  return (\n    <CSSTransition timeout={5000}>\n    <Form\n      name=\"normal_login\"\n      className={s.loginForm}\n      initialValues={{\n        remember: true,\n      }}\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      onFinish={onFinish}\n    >\n      \n      <Form.Item\n        name=\"email\"\n        label={t(\"singInForm.email\")}\n        onChange={e =>setEmail(e.target.value)}\n        \n        rules={[\n          {\n            type: 'email',\n            message: messageNotValid,\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input\n        className={s.containerInput}       \n        placeholder={t(\"singInForm.placeholderEmail\")}\n        prefix={<SettingFilled />}/> \n        </Form.Item>\n\n      <Form.Item\n       label=\"Password\"\n        name={t(\"singInForm.password\")}\n        onChange={e =>setPassword(e.target.value)}\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input.Password\n          className={s.containerInput}\n          prefix={<LockOutlined className={s.siteFormItemIcon} />}\n          type=\"password\"\n          placeholder={t(\"singInForm.placeholderPassword\")}\n        />\n      </Form.Item>\n\n\n      <Form.Item>\n\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className={s.button}\n          disabled={isBtnDisabled}\n          >\n          { t(\"singInForm.buttonLogIn\")}\n            </Button>\n            <div className={s.textContainer}>\n              <p>{t(\"singInForm.or\")} </p>\n               <a\n            className={s.link}\n            href=\"/register\">{t(\"singInForm.gooRegisterForm\")}</a>\n            </div>\n      </Form.Item>\n    </Form>\n    </CSSTransition>\n\n  );\n};\n\nexport default SingInForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}