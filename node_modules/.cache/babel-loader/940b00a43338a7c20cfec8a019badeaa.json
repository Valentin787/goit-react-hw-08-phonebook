{"ast":null,"code":"import _slicedToArray from\"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useState}from'react';import Input from'../common/Input';import Appear from'components/Appear';import{ThemeContext,themes}from'components/context/themeContext';import{useTranslation}from'react-i18next';import s from'./ContactForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactForm=function ContactForm(_ref){var confirmContact=_ref.confirmContact;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setNumber=_useState4[1];var normalizeName=function normalizeName(name){return name.split(' ').map(function(word){var firstUpCaseLetter=word.charAt(0).toUpperCase();var anoterLetter=word.substring(1);return\"\".concat(firstUpCaseLetter).concat(anoterLetter);}).join(' ');};var onSubFormData=function onSubFormData(e){e.preventDefault();var objData={name:normalizeName(name),number:number};confirmContact(objData);resetForm();};var resetForm=function resetForm(){setName('');setNumber('');};return/*#__PURE__*/_jsxs(Appear,{time:300,children:[/*#__PURE__*/_jsx(\"h1\",{className:theme===themes.light?s.headerLight:s.headerDark,children:t(\"contactForm.headerForm\")}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubFormData,className:theme===themes.light?s.formLight:s.formDark,children:[/*#__PURE__*/_jsx(Input,{label:t(\"contactForm.name\"),type:\"text\",name:\"name\",onChange:function onChange(e){return setName(e.target.value);},value:name,pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",required:true}),/*#__PURE__*/_jsx(Input,{label:t(\"contactForm.number\"),type:\"tel\",name:\"number\",onChange:function onChange(e){return setNumber(e.target.value);},value:number,pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",title:\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",required:true}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:s.btnAdd,children:[' ',t(\"contactForm.button\")]})]}),/*#__PURE__*/_jsx(\"h2\",{className:theme===themes.light?s.headerListLight:s.headerListDark,children:t(\"contactForm.headerList\")})]});};export default ContactForm;","map":{"version":3,"names":["useContext","useState","Input","Appear","ThemeContext","themes","useTranslation","s","ContactForm","confirmContact","theme","t","name","setName","number","setNumber","normalizeName","split","map","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","onSubFormData","e","preventDefault","objData","resetForm","light","headerLight","headerDark","formLight","formDark","target","value","btnAdd","headerListLight","headerListDark"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../common/Input';\nimport Appear from 'components/Appear';\nimport { ThemeContext, themes } from 'components/context/themeContext';\nimport { useTranslation } from 'react-i18next';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({confirmContact}) => {\n\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n    \n\n\n  return (\n    <Appear time={300}>\n      <h1\n        className={theme === themes.light ? s.headerLight : s.headerDark}\n    \n      >{t(\"contactForm.headerForm\")}</h1>\n      <form\n        onSubmit={onSubFormData}\n        className={theme === themes.light ? s.formLight : s.formDark}>\n      <Input\n        label={t(\"contactForm.name\")}\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label={t(\"contactForm.number\")}\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        {t(\"contactForm.button\")}\n      </button>\n      </form>\n      <h2\n        className={theme === themes.light ? s.headerListLight : s.headerListDark}\n      >{t(\"contactForm.headerList\")}</h2>\n    </Appear>\n\n  );\n};\n\nContactForm.propTypes = {\n  confirmContact: PropTypes.func,\n};\n\nexport default ContactForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}