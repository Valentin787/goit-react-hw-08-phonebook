{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/Clock/AlarmList/AlarmList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport Switch from '@mui/material/Switch';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlarmContext } from \"../../context/ContextAlarm\";\nimport { alarmState } from 'redux/alarm/alarmsSelectors';\nimport { getAlarms, toggleAlarm } from 'redux/alarm/operation';\nimport AlarmModal from 'components/common/AlarmModal/AlarmModal';\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport s from './AlarmList.module.css';\nimport NotificationsOffSharpIcon from '@mui/icons-material/NotificationsOffSharp';\nimport Modal from 'components/common/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AlarmList = () => {\n  _s();\n\n  const alarms = useSelector(alarmState);\n  const dispatch = useDispatch();\n  const [activeAlarm, setActiveAlarm] = useState(null);\n  const {\n    setAlarmTime,\n    pauseAlarm,\n    hasAlarm,\n    setHasAlarm\n  } = useContext(AlarmContext); // const [alarmsArray, setAlarmsArray] = useState(alarms);\n  // const [checked, setChecked] = useState(true);\n  //FIRST_FETCH\n\n  useEffect(() => {\n    dispatch(getAlarms());\n  }, [dispatch]); //TOGGLE\n  // console.log(alarms);\n\n  const handleChange = item => setActiveAlarm({ ...item,\n    isToggle: !item.isToggle\n  });\n\n  useEffect(() => {\n    if (!activeAlarm) return;\n\n    const handlerToggleAlarm = () => {\n      dispatch(toggleAlarm(activeAlarm));\n      setActiveAlarm(null);\n    };\n\n    handlerToggleAlarm();\n  }, [activeAlarm, dispatch]);\n\n  const setAlarm = () => {\n    if (hasAlarm) {\n      pauseAlarm();\n      setHasAlarm(false);\n      return;\n    } // if (\n    //   !hour.includes(\"Hour\") &&\n    //   !minutes.includes(\"Minutes\") &&\n    //   !amPmOption.includes(\"Am-Pm\")\n    // ) {\n    //   setHasAlarm(true);\n    //   setAlarmTime(`${hour}:${minutes} ${amPmOption}`);\n    //   // console.log()\n    // }\n\n  }; // console.log(activeAlarm)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [hasAlarm && /*#__PURE__*/_jsxDEV(AlarmModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alarms && alarms.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: s.item,\n          style: {\n            backgroundColor: item.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            value: item.time,\n            checked: item.isToggle,\n            onClick: hasAlarm ? setAlarm : () => handleChange(item) // onChange={()=>handleChange(item)}\n            ,\n            inputProps: {\n              'aria-label': 'controlled'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DeleteForeverRoundedIcon, {\n            sx: {\n              color: \"#181616\",\n              fontSize: \"32px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AlarmList, \"xprk2y7KS859FX/2C/PTKwLgfMY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AlarmList;\nAlarmList.propTypes = {};\nexport default AlarmList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlarmList\");","map":{"version":3,"names":["useContext","useEffect","useState","Switch","useDispatch","useSelector","AlarmContext","alarmState","getAlarms","toggleAlarm","AlarmModal","DeleteForeverRoundedIcon","s","NotificationsOffSharpIcon","Modal","AlarmList","alarms","dispatch","activeAlarm","setActiveAlarm","setAlarmTime","pauseAlarm","hasAlarm","setHasAlarm","handleChange","item","isToggle","handlerToggleAlarm","setAlarm","map","backgroundColor","color","time","fontSize","id","propTypes"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/Clock/AlarmList/AlarmList.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport Switch from '@mui/material/Switch';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlarmContext } from \"../../context/ContextAlarm\";\nimport { alarmState } from 'redux/alarm/alarmsSelectors';\nimport { getAlarms, toggleAlarm } from 'redux/alarm/operation';\nimport AlarmModal from 'components/common/AlarmModal/AlarmModal';\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded';\nimport s from './AlarmList.module.css'\nimport NotificationsOffSharpIcon from '@mui/icons-material/NotificationsOffSharp';\nimport Modal from 'components/common/Modal';\n\n\n\n\n\n\nconst AlarmList = () => {\n  \n  const alarms = useSelector(alarmState);\n  const dispatch = useDispatch();\n  const [activeAlarm, setActiveAlarm] = useState(null);\n  \n  const { setAlarmTime, pauseAlarm, hasAlarm, setHasAlarm } =\n  useContext(AlarmContext);\n  \n  // const [alarmsArray, setAlarmsArray] = useState(alarms);\n\n\n  // const [checked, setChecked] = useState(true);\n\n\n  //FIRST_FETCH\n\n  useEffect(() => {\n    dispatch(getAlarms())\n  }, [dispatch]);\n\n\n  //TOGGLE\n// console.log(alarms);\n  const handleChange = (item) => setActiveAlarm({ ...item, isToggle: !item.isToggle });\n\n  useEffect(() => {\n    if (!activeAlarm) return;\n    const handlerToggleAlarm = () => {\n      dispatch(toggleAlarm(activeAlarm))\n      setActiveAlarm(null)\n    }\n    \n    handlerToggleAlarm()\n  }, [activeAlarm, dispatch])\n  \n\n    const setAlarm = () => {\n    if (hasAlarm) {\n      pauseAlarm();\n      setHasAlarm(false);\n      return;\n    }\n\n    // if (\n    //   !hour.includes(\"Hour\") &&\n    //   !minutes.includes(\"Minutes\") &&\n    //   !amPmOption.includes(\"Am-Pm\")\n    // ) {\n    //   setHasAlarm(true);\n    //   setAlarmTime(`${hour}:${minutes} ${amPmOption}`);\n    //   // console.log()\n    // }\n  };\n\n  // console.log(activeAlarm)\n  return (\n    <>\n    {hasAlarm && <AlarmModal />}\n   \n    <ul>\n      {alarms && alarms.map((item) => {\n        return <li\n          className={s.item}\n          key={item.id}\n          style={{backgroundColor: item.color}}\n        >\n          <span>{item.time}</span>\n          <Switch\n            value={item.time}\n            checked={item.isToggle}\n            onClick={hasAlarm? setAlarm:()=>handleChange(item)}\n            // onChange={()=>handleChange(item)}\n            inputProps={{ 'aria-label': 'controlled' }}\n           \n          />\n          <DeleteForeverRoundedIcon\n            sx={{\n              color: \"#181616\",\n              fontSize: \"32px\"\n            }}\n          />\n       <hr/>\n      </li>}\n      )}\n     \n    </ul>\n    \n    </>\n  )\n}\n\nAlarmList.propTypes = {}\n\nexport default AlarmList"],"mappings":"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"},"metadata":{},"sourceType":"module"}