{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarList/CalendarList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { eventsState } from 'redux/event/eventsSelectors';\nimport { toggleEvent } from 'redux/event/eventOperation';\nimport { Checkbox } from '@mui/material';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport '../DateCalendar.scss';\nimport Confetti from 'components/common/Confetti/Confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarList = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const dispatch = useDispatch();\n  const events = useSelector(eventsState);\n  const [activeEvent, setActiveEvent] = useState(null); //TOGGLE_EVENT\n\n  const onClickDone = currentEvent => setActiveEvent({ ...currentEvent,\n    isActive: !currentEvent.isActive\n  });\n\n  useEffect(() => {\n    if (!activeEvent) return;\n\n    const onToggleEvent = () => {\n      dispatch(toggleEvent(activeEvent));\n      setActiveEvent(null);\n    };\n\n    onToggleEvent();\n  }, [activeEvent, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events && events.map(item => {\n        if (data !== item.data) {\n          return;\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: item.isActive,\n              onClick: () => onClickDone(item) // onChange={e => console.log(e.target.value)}\n              // inputProps={{ 'aria-label': 'controlled' }}\n              ,\n              color: \"success\",\n              inputProps: {\n                'aria-label': 'controlled'\n              },\n              sx: {\n                '& .MuiSvgIcon-root': {\n                  fontSize: \"32\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BackspaceIcon, {\n              sx: {\n                color: \"#e00e0e\",\n                fontSize: \"30px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarList, \"sEjUh27F1AcYGrC09P0e+bvG0XY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CalendarList;\nCalendarList.propTypes = {\n  data: PropTypes.string\n};\nexport default CalendarList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarList\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","PropTypes","eventsState","toggleEvent","Checkbox","BackspaceIcon","Confetti","CalendarList","data","dispatch","events","activeEvent","setActiveEvent","onClickDone","currentEvent","isActive","onToggleEvent","map","item","fontSize","name","color","id","propTypes","string"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarList/CalendarList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { eventsState } from 'redux/event/eventsSelectors';\nimport { toggleEvent } from 'redux/event/eventOperation';\nimport { Checkbox } from '@mui/material';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport '../DateCalendar.scss';\nimport Confetti from 'components/common/Confetti/Confetti';\n\n\n\n\n\nconst CalendarList = ({ data }) => {\n\n  const dispatch = useDispatch();\n  const events = useSelector(eventsState); \n  const [activeEvent, setActiveEvent] = useState(null);\n\n\n  //TOGGLE_EVENT\n\n  const onClickDone = (currentEvent) => setActiveEvent({...currentEvent, isActive:!currentEvent.isActive});\n\n  useEffect(() => {\n    if (!activeEvent) return;\n    const onToggleEvent = () => {\n      dispatch(toggleEvent(activeEvent));\n      setActiveEvent(null);\n    }\n    onToggleEvent()\n  \n  }, [activeEvent, dispatch])\n\n  return (\n    <div className=\"events\">\n      <ul>\n        {events && events.map(item => {\n          if (data !== item.data) {\n            return;\n          }\n          else{\n            return <li key={item.id}>\n              <Checkbox\n                checked={item.isActive}\n                onClick={() => onClickDone(item)}\n                // onChange={e => console.log(e.target.value)}\n                // inputProps={{ 'aria-label': 'controlled' }}\n                color=\"success\"\n                inputProps={{ 'aria-label': 'controlled' }}\n                sx={{ '& .MuiSvgIcon-root': { fontSize: \"32\" } }}\n              />\n              <strong>{item.name}</strong>\n              <Confetti/>\n              <BackspaceIcon\n              sx={{\n              color: \"#e00e0e\",\n              fontSize: \"30px\"\n            }}/>\n          </li>\n          }\n        })}\n      </ul>\n    </div>\n  )\n}\n\nCalendarList.propTypes = {\n  data: PropTypes.string,\n}\n\nexport default CalendarList"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;;;AAMA,MAAMC,YAAY,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAEjC,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,MAAM,GAAGV,WAAW,CAACE,WAAD,CAA1B;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C,CAJiC,CAOjC;;EAEA,MAAMe,WAAW,GAAIC,YAAD,IAAkBF,cAAc,CAAC,EAAC,GAAGE,YAAJ;IAAkBC,QAAQ,EAAC,CAACD,YAAY,CAACC;EAAzC,CAAD,CAApD;;EAEAlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,WAAL,EAAkB;;IAClB,MAAMK,aAAa,GAAG,MAAM;MAC1BP,QAAQ,CAACN,WAAW,CAACQ,WAAD,CAAZ,CAAR;MACAC,cAAc,CAAC,IAAD,CAAd;IACD,CAHD;;IAIAI,aAAa;EAEd,CARQ,EAQN,CAACL,WAAD,EAAcF,QAAd,CARM,CAAT;EAUA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,uBACE;MAAA,UACGC,MAAM,IAAIA,MAAM,CAACO,GAAP,CAAWC,IAAI,IAAI;QAC5B,IAAIV,IAAI,KAAKU,IAAI,CAACV,IAAlB,EAAwB;UACtB;QACD,CAFD,MAGI;UACF,oBAAO;YAAA,wBACL,QAAC,QAAD;cACE,OAAO,EAAEU,IAAI,CAACH,QADhB;cAEE,OAAO,EAAE,MAAMF,WAAW,CAACK,IAAD,CAF5B,CAGE;cACA;cAJF;cAKE,KAAK,EAAC,SALR;cAME,UAAU,EAAE;gBAAE,cAAc;cAAhB,CANd;cAOE,EAAE,EAAE;gBAAE,sBAAsB;kBAAEC,QAAQ,EAAE;gBAAZ;cAAxB;YAPN;cAAA;cAAA;cAAA;YAAA,QADK,eAUL;cAAA,UAASD,IAAI,CAACE;YAAd;cAAA;cAAA;cAAA;YAAA,QAVK,eAWL,QAAC,QAAD;cAAA;cAAA;cAAA;YAAA,QAXK,eAYL,QAAC,aAAD;cACA,EAAE,EAAE;gBACJC,KAAK,EAAE,SADH;gBAEJF,QAAQ,EAAE;cAFN;YADJ;cAAA;cAAA;cAAA;YAAA,QAZK;UAAA,GAASD,IAAI,CAACI,EAAd;YAAA;YAAA;YAAA;UAAA,QAAP;QAkBD;MACF,CAxBU;IADb;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CApDD;;GAAMf,Y;UAEaR,W,EACFC,W;;;KAHXO,Y;AAsDNA,YAAY,CAACgB,SAAb,GAAyB;EACvBf,IAAI,EAAEP,SAAS,CAACuB;AADO,CAAzB;AAIA,eAAejB,YAAf"},"metadata":{},"sourceType":"module"}