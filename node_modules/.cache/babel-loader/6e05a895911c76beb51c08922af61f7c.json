{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarForm/CalendarForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../DateCalendar.scss';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEvents, addEvent, deleteEvent } from 'redux/event/eventOperation';\nimport { eventsState, loadingSelector, errorSelector } from 'redux/event/eventsSelectors';\nimport Loader from 'components/common/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CalendarForm = () => {\n  _s();\n\n  // console.log(`value->`, value)\n  // console.log(`submit->`, submit)\n  //  console.log(`update->`, update)\n  const dispatch = useDispatch();\n  const loading = useSelector(loadingSelector);\n  const [eventName, setEventName] = useState(\"\");\n  const [newEvent, setNewEvent] = useState(null); //ADAPTED_NAME\n\n  const normalizeName = name => name.split(' ').map(word => {\n    const firstUpCaseLetter = word.charAt(0).toUpperCase();\n    const anoterLetter = word.substring(1);\n    return `${firstUpCaseLetter}${anoterLetter}`;\n  }).join(' '); //GET_EVENTS\n\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, [dispatch]); //ADD_NEW_EVENT\n\n  const confirmContact = event => setNewEvent(event);\n\n  useEffect(() => {\n    if (!newEvent) return;\n    dispatch(addEvent(newEvent));\n    setNewEvent(null);\n  }, [dispatch, newEvent]); //SUBMIT_FORM\n\n  const onSubFormData = e => {\n    e.preventDefault();\n    const objEvent = {\n      name: normalizeName(eventName),\n      id: nanoid()\n    };\n    confirmContact(objEvent);\n    setEventName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubFormData,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-main\",\n          name: \"event\",\n          onChange: e => setEventName(e.target.value),\n          type: \"text\",\n          placeholder: \"New Event...\",\n          value: eventName,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addButton btn-main\",\n          type: \"submit\" // class=\"btn-main\"\n          ,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CalendarForm, \"NmAwI2DEhQWj5npopLNnsbXtOUM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CalendarForm;\nexport default CalendarForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarForm\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","nanoid","useDispatch","useSelector","getEvents","addEvent","deleteEvent","eventsState","loadingSelector","errorSelector","Loader","CalendarForm","dispatch","loading","eventName","setEventName","newEvent","setNewEvent","normalizeName","name","split","map","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","confirmContact","event","onSubFormData","e","preventDefault","objEvent","id","target","value"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/DateCalendar/CalendarForm/CalendarForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types';\nimport '../DateCalendar.scss';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEvents, addEvent, deleteEvent } from 'redux/event/eventOperation';\nimport { eventsState, loadingSelector,errorSelector } from 'redux/event/eventsSelectors';\nimport Loader from 'components/common/Loader';\n\n\n  \nconst CalendarForm = () => {\n  // console.log(`value->`, value)\n  // console.log(`submit->`, submit)\n  //  console.log(`update->`, update)\n\n  const dispatch = useDispatch();\n  const loading = useSelector(loadingSelector);\n\n  const [eventName, setEventName] = useState(\"\");\n  const [newEvent, setNewEvent] = useState(null);\n  \n  \n//ADAPTED_NAME\n   const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n     .join(' ');\n  \n//GET_EVENTS\n  \n  useEffect(() => {\n    dispatch(getEvents())\n  }, [dispatch])\n  \n//ADD_NEW_EVENT\n  const confirmContact = (event) => setNewEvent(event)\n\n  useEffect(() => {\n    if (!newEvent) return;\n\n    dispatch(addEvent(newEvent))\n\n    setNewEvent(null);\n\n\n  }, [dispatch, newEvent])\n  \n    \n//SUBMIT_FORM\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objEvent = {\n      name:normalizeName(eventName),\n      id:nanoid()\n    };\n \n    confirmContact(objEvent);\n    setEventName(\"\");\n  };\n\n  return (\n    <>\n      {loading &&<Loader loading={loading}/>}\n      <form onSubmit={onSubFormData}>\n        <div className=\"input-group\">\n          <input\n          className=\"input-main\"\n          name='event'\n          onChange={e => setEventName(e.target.value)}\n            type=\"text\"\n            placeholder=\"New Event...\"\n            value={eventName}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          ></input>\n          <button\n            className=\"addButton btn-main\"\n            type=\"submit\"\n            // class=\"btn-main\"\n          >\n            +\n          </button>\n        </div>\n      </form>\n    </>\n\n  )\n}\n\nexport default CalendarForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}