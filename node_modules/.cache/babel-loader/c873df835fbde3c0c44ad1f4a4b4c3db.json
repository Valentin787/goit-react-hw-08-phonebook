{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/Clock/AlarmOption/AlarmOption.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { minutesNumber, hourNumber } from \"../../../data/func\";\nimport useSelect from \"../../hooks/useSelect\";\nimport { AlarmContext } from \"../../context/ContextAlarm\";\nimport { useDispatch } from \"react-redux\";\nimport { addAlarm } from \"redux/alarm/operation\";\nimport { nanoid } from 'nanoid';\nimport { CSSTransition } from 'react-transition-group';\nimport NotificationAddRoundedIcon from '@mui/icons-material/NotificationAddRounded';\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport s from './AlarmOption.module.css'; // import  '../../Appear/style.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlarmOption() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [hour, setHour] = useSelect(\"Hour\");\n  const [minutes, setMinutes] = useSelect(\"Minutes\");\n  const [amPmOption, setAmPmOption] = useSelect(\"Am-Pm\");\n  const [addAlarmModal, setAddAlarmModal] = useState(false);\n  const [notAddAlarm, setNotAddAlarm] = useState(!addAlarmModal);\n  const [newAlarm, setNewAlarm] = useState(null);\n  const {\n    // setAlarmTime,\n    // pauseAlarm,\n    hasAlarm // setHasAlarm\n\n  } = useContext(AlarmContext); // const setAlarm = () => {\n  //   // if (hasAlarm) {\n  //   //   pauseAlarm();\n  //   //   setHasAlarm(false);\n  //   //   return;\n  //   // }\n  //   if (\n  //     !hour.includes(\"Hour\") &&\n  //     !minutes.includes(\"Minutes\") &&\n  //     !amPmOption.includes(\"Am-Pm\")\n  //   ) {\n  //     setHasAlarm(true);\n  //     setAlarmTime(`${hour}:${minutes} ${amPmOption}`);\n  //     // console.log()\n  //   }\n  // };\n  ///OPEN_ADD_MODAL\n\n  const openModal = () => {\n    setAddAlarmModal(prevState => !prevState);\n    setNotAddAlarm(prevState => !prevState);\n  };\n\n  const onSubmitNewAlarm = e => {\n    e.preventDefault();\n    const alarm = {\n      time: `${hour}:${minutes} ${amPmOption}`,\n      isToggle: false,\n      id: nanoid()\n    }; // console.log(alarm)\n\n    setNewAlarm(alarm);\n  };\n\n  useEffect(() => {\n    if (!newAlarm) return;\n    dispatch(addAlarm(newAlarm));\n    setNewAlarm(null);\n  }, [dispatch, newAlarm]);\n\n  const clickOn = () => {\n    console.log(\"JKJKHKJJ\");\n  }; // const resetAlarm = () => {\n  //   setHour.value = \"33\";\n  //   // setMinutes(\"Minutes\");\n  //   // setAmPmOption(\"Am-Pm\");\n  // }\n  // console.log(newAlarm)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.optionContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      // className=\"btnClose\"\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(CancelRoundedIcon, {\n        fontSize: \"large\",\n        sx: {\n          color: \"#e62b2b\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      // className=\"btnAdd\"\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(NotificationAddRoundedIcon, {\n        fontSize: \"large\",\n        sx: {\n          color: \"#0876e9\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitNewAlarm,\n        className: hasAlarm ? s.wrapperOption : s.disable,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", { ...setHour,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"Hour\",\n              children: \"Hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), hourNumber.map((hour, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hour,\n              children: hour\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...setMinutes,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"Minutes\",\n              children: \"Minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), minutesNumber.map((minutes, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: minutes,\n              children: minutes\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...setAmPmOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"Am-Pm\",\n              children: \"Am/Pm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AM\",\n              children: \"Am\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PM\",\n              children: \"Pm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.buttonContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clickOn,\n            className: s.btnAddInForm,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(DataSaverOnIcon, {\n              fontSize: \"large\",\n              sx: {\n                color: \"#a1ee13\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlarmOption, \"D980iuR1gE7u4DvJTBESfcU6xs4=\", false, function () {\n  return [useDispatch, useSelect, useSelect, useSelect];\n});\n\n_c = AlarmOption;\nexport default AlarmOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlarmOption\");","map":{"version":3,"names":["useContext","useEffect","useState","minutesNumber","hourNumber","useSelect","AlarmContext","useDispatch","addAlarm","nanoid","CSSTransition","NotificationAddRoundedIcon","CancelRoundedIcon","DataSaverOnIcon","RestoreIcon","s","AlarmOption","dispatch","hour","setHour","minutes","setMinutes","amPmOption","setAmPmOption","addAlarmModal","setAddAlarmModal","notAddAlarm","setNotAddAlarm","newAlarm","setNewAlarm","hasAlarm","openModal","prevState","onSubmitNewAlarm","e","preventDefault","alarm","time","isToggle","id","clickOn","console","log","optionContainer","color","wrapperOption","disable","map","index","buttonContainer","btnAddInForm"],"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-08-phonebook/src/components/Clock/AlarmOption/AlarmOption.jsx"],"sourcesContent":["import  { useContext, useEffect, useState } from \"react\";\nimport { minutesNumber, hourNumber } from \"../../../data/func\";\nimport useSelect from \"../../hooks/useSelect\";\nimport { AlarmContext } from \"../../context/ContextAlarm\";\nimport { useDispatch } from \"react-redux\";\nimport { addAlarm } from \"redux/alarm/operation\";\nimport { nanoid } from 'nanoid';\nimport { CSSTransition } from 'react-transition-group';\n\nimport NotificationAddRoundedIcon from '@mui/icons-material/NotificationAddRounded';\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\nimport DataSaverOnIcon from '@mui/icons-material/DataSaverOn';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport s from './AlarmOption.module.css'\n// import  '../../Appear/style.css'\n\nfunction AlarmOption() {\n\n  const dispatch = useDispatch()\n  const [hour, setHour] = useSelect(\"Hour\");\n  const [minutes, setMinutes] = useSelect(\"Minutes\");\n  const [amPmOption, setAmPmOption] = useSelect(\"Am-Pm\");\n  const [addAlarmModal, setAddAlarmModal] = useState(false);\n  const [notAddAlarm, setNotAddAlarm] = useState(!addAlarmModal);\n\n  const [newAlarm, setNewAlarm] = useState(null);\n\n  const {\n    // setAlarmTime,\n    // pauseAlarm,\n    hasAlarm,\n    // setHasAlarm\n  } = useContext(AlarmContext);\n\n  // const setAlarm = () => {\n  //   // if (hasAlarm) {\n  //   //   pauseAlarm();\n  //   //   setHasAlarm(false);\n  //   //   return;\n  //   // }\n\n  //   if (\n  //     !hour.includes(\"Hour\") &&\n  //     !minutes.includes(\"Minutes\") &&\n  //     !amPmOption.includes(\"Am-Pm\")\n  //   ) {\n  //     setHasAlarm(true);\n  //     setAlarmTime(`${hour}:${minutes} ${amPmOption}`);\n  //     // console.log()\n  //   }\n  // };\n\n  ///OPEN_ADD_MODAL\n\n  const openModal = () => {\n    setAddAlarmModal(prevState => !prevState);\n    setNotAddAlarm(prevState => !prevState)\n  };\n    \n\n  const onSubmitNewAlarm = (e) => { \n    e.preventDefault();\n\n    const alarm = {\n      time: `${hour}:${minutes} ${amPmOption}`,\n      isToggle: false,\n      id:nanoid(),\n      \n    }\n    // console.log(alarm)\n    setNewAlarm(alarm);\n\n  }\n  useEffect(() => {\n    if (!newAlarm) return;\n    dispatch(addAlarm(newAlarm))\n\n    setNewAlarm(null);\n\n  }, [dispatch, newAlarm])\n\n  const clickOn = () => {\n    console.log(\"JKJKHKJJ\");\n  }\n  \n  // const resetAlarm = () => {\n  //   setHour.value = \"33\";\n\n  //   // setMinutes(\"Minutes\");\n  //   // setAmPmOption(\"Am-Pm\");\n  // }\n\n  // console.log(newAlarm)\n  return (\n    <div className={s.optionContainer}>\n      <button\n        // className=\"btnClose\"\n        onClick={openModal}>\n      {/* <CSSTransition timeout={500} in={addAlarmModal} > */}\n        <CancelRoundedIcon\n          fontSize=\"large\" \n          sx={{ color: \"#e62b2b\"}}\n          />\n        {/* </CSSTransition> */}\n      </button>\n\n      <button\n        // className=\"btnAdd\"\n        onClick={openModal}>\n      {/* <CSSTransition timeout={500} in={notAddAlarm} unmountOnExit> */}\n        <NotificationAddRoundedIcon\n          fontSize=\"large\"\n          sx={{ color: \"#0876e9\" }}\n          />\n        {/* </CSSTransition> */}\n      </button>\n      \n      <div\n        // className=\"banner\"\n      >\n        {/* <CSSTransition timeout={500} in={addAlarmModal} unmountOnExit> */}\n        <form\n         onSubmit={onSubmitNewAlarm}\n            className={hasAlarm ? s.wrapperOption : s.disable}>\n          <div\n            // className={s.selectContainer}\n          >\n              <select {...setHour}\n              // className={s.select}\n            >\n                <option disabled value=\"Hour\">\n                  Hour\n                </option>\n          {hourNumber.map((hour, index) => (\n            <option key={index} value={hour}>\n              {hour}\n            </option>\n          ))}\n              </select>\n              <select {...setMinutes}\n              // className={s.select}\n            >\n                <option disabled value=\"Minutes\">         \n                Minutes\n                </option>\n          {minutesNumber.map((minutes, index) => (\n            <option key={index} value={minutes}>\n              {minutes}\n            </option>\n          ))}\n              </select>\n              <select {...setAmPmOption}\n              // className={s.select}\n            >\n                <option disabled value=\"Am-Pm\">\n                  Am/Pm\n                </option>\n                <option value=\"AM\">Am</option>\n                <option value=\"PM\">Pm</option>\n              </select>\n            </div>\n            <div\n              className={s.buttonContainer}\n            >\n              <button\n                onClick={clickOn}\n                className={s.btnAddInForm}\n                type=\"submit\">\n                <DataSaverOnIcon\n                fontSize=\"large\" \n                sx={{ color: \"#a1ee13\" }}\n                />\n                {/* <strong\n                  className={s.btnAddText}\n                >ADD\n                </strong> */}\n              </button>\n              {/* <button\n                className={s.btnReset}\n                type=\"reset\"> */}\n                {/* <strong>Reset</strong> */}\n                {/* <RestoreIcon\n                fontSize=\"large\" \n                sx={{ color: \"#ee133f\" }}\n                />\n              </button> */}\n            </div>\n      </form>\n        {/* </CSSTransition> */}\n      </div>\n    </div>\n  );\n}\n\nexport default AlarmOption;"],"mappings":"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"},"metadata":{},"sourceType":"module"}